# –°–æ–∑–¥–∞–π—Ç–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å Device, –∫–æ—Ç–æ—Ä—ã–π:
# 	‚Ä¢	–ò–º–µ–µ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ turn_on().
# 	‚Ä¢	–ò–º–µ–µ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ turn_off().
# –°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –ø–æ–¥–∫–ª–∞—Å—Å–∞:
# 	‚Ä¢	Smartphone, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–∞–ª–∏–∑—É–µ—Ç turn_on() –∫–∞–∫ ‚Äú–°–º–∞—Ä—Ç—Ñ–æ–Ω –≤–∫–ª—é—á–∞–µ—Ç—Å—è‚Äù –∏ turn_off() –∫–∞–∫ ‚Äú–°–º–∞—Ä—Ç—Ñ–æ–Ω –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è‚Äù.
# 	‚Ä¢	Laptop, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–∞–ª–∏–∑—É–µ—Ç turn_on() –∫–∞–∫ ‚Äú–ù–æ—É—Ç–±—É–∫ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è‚Äù –∏ turn_off() –∫–∞–∫ ‚Äú–ù–æ—É—Ç–±—É–∫ –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è‚Äù.
# üìå –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:
# 	‚Ä¢	–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä Device. –ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç?
# 	‚Ä¢	–î–æ–±–∞–≤—å—Ç–µ –µ—â–µ –æ–¥–∏–Ω –ø–æ–¥–∫–ª–∞—Å—Å, –Ω–∞–ø—Ä–∏–º–µ—Ä Tablet, –∏ —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –≤ –Ω–µ–º turn_on() –∏ turn_off().

from abc import ABC, abstractmethod


class Device(ABC):
    @abstractmethod
    def turn_on(self):
        pass

    @abstractmethod
    def turn_off(self):
        pass


class Smartphone(Device):
    def turn_on(self):
        print("–°–º–∞—Ä—Ç—Ñ–æ–Ω –≤–∫–ª—é—á–∞–µ—Ç—Å—è")

    def turn_off(self):
        print("–°–º–∞—Ä—Ç—Ñ–æ–Ω –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è")


class Laptop(Device):
    def turn_on(self):
        print("–ù–æ—É—Ç–±—É–∫ –≤–∫–ª—é—á–∞–µ—Ç—Å—è")

    def turn_off(self):
        print("–ù–æ—É—Ç–±—É–∫ –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è")


class Tablet(Device):
    def turn_on(self):
        print("–ü–ª–∞–Ω—à–µ—Ç –≤–∫–ª—é—á–∞–µ—Ç—Å—è")

    def turn_off(self):
        print("–ü–ª–∞–Ω—à–µ—Ç –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è")

#Test Data
# dev = Device()    # –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç, —Ç–∞–∫ –∫–∞–∫ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Ç—Ä–µ–±—É—é—Ç —Å–≤–æ–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
smart = Smartphone()
lap = Laptop()
tabl = Tablet()

smart.turn_on()
smart.turn_off()

lap.turn_on()
lap.turn_off()

tabl.turn_on()
tabl.turn_off()
